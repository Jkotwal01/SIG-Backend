openapi: 3.0.0
info:
  title: Social Posts API
  version: 1.0.0
  description: A simple backend API using Express, MongoDB, and JWT for a mini social media app.

servers:
  - url: http://localhost:3000

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        age:
          type: integer
        email:
          type: string
        password:
          type: string

    Post:
      type: object
      properties:
        user:
          type: string
        content:
          type: string
        date:
          type: string
          format: date-time
        likes:
          type: array
          items:
            type: string

paths:
  /signup:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Signup successful

  /login:
    post:
      summary: Login user and get JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: JWT token returned

  /post:
    post:
      summary: Create a post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        "200":
          description: Post created

  /tweets:
    get:
      summary: Get all tweets
      responses:
        "200":
          description: List of all posts

  /yourtweets:
    get:
      summary: Get posts of logged-in user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of user's posts

  /like/{id}:
    post:
      summary: Like a post
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Post liked

  /update/{id}:
    put:
      summary: Update your post
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        "200":
          description: Post updated

  /delete/{id}:
    delete:
      summary: Delete your post
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Post deleted
